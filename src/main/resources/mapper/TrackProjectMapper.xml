<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.honeyboard.api.project.track.mapper.TrackProjectMapper">
    <!-- TeamMemberInfo resultMap -->
    <resultMap id="teamMemberInfoMap" type="TeamMemberInfo">
        <id property="id" column="member_id"/>
        <result property="name" column="member_name"/>
        <result property="role" column="member_role"/>
    </resultMap>

    <resultMap id="trackTeamListMap" type="TrackTeamList">
        <id property="id" column="team_id"/>
        <result property="submitted" column="is_completed"/>
        <result property="projectBoardId" column="board_id"/>
        <collection property="members" resultMap="teamMemberInfoMap"/>
    </resultMap>

    <resultMap id="trackProjectBoardMap" type="TrackProjectBoardList">
        <id property="id" column="board_id"/>
        <result property="title" column="board_title"/>
        <result property="createdAt" column="board_created_at"/>
        <result property="thumbnail" column="board_thumbnail"/>
        <collection property="members" ofType="ProjectUserInfo">
            <id property="id" column="board_member_id"/>
            <result property="name" column="board_member_name"/>
        </collection>
    </resultMap>

    <resultMap id="trackProjectDetailMap" type="TrackProjectDetail">
        <id property="id" column="id"/>
        <result property="title" column="title"/>
        <result property="objective" column="objective"/>
        <result property="description" column="description"/>
        <result property="createdAt" column="created_at"/>
        <collection property="noTeamUsers" ofType="ProjectUserInfo">
            <id property="id" column="no_team_user_id"/>
            <result property="name" column="no_team_user_name"/>
        </collection>
        <collection property="teams" resultMap="trackTeamListMap"/>
        <collection property="boards" resultMap="trackProjectBoardMap"/>
    </resultMap>

    <!-- 관통 프로젝트 전체 조회 -->
    <select id="selectAllTrackProjects" parameterType="Integer" resultType="TrackProjectList">
        SELECT 
            id,
            title,
            thumbnail,
            created_at
        FROM track_project
        WHERE is_deleted = false
        <if test="generationId != 0">
            AND generation_id = #{generationId}
        </if>
    </select>
    
    <!-- 관통 프로젝트 상세 조회 -->
    <select id="selectTrackProjectById" resultMap="trackProjectDetailMap">
        WITH NoTeamUsers AS (
            SELECT u.id, u.name
            FROM user u
            WHERE u.generation_id = (
                SELECT generation_id FROM track_project WHERE id = #{trackProjectId}
            )
              AND u.id NOT IN (
                SELECT tm.user_id
                FROM track_team_member tm
                         JOIN track_team t ON tm.track_team_id = t.id
                WHERE t.track_project_id = #{trackProjectId}
            )
              AND u.id NOT IN (
                SELECT user_id FROM track_excluded_member
                WHERE project_id = #{trackProjectId}
            )
        ),
             Teams AS (
                 SELECT
                     tt.id AS team_id,
                     tt.is_completed,
                     tm.user_id AS member_id,
                     u.name AS member_name,
                     tm.role AS member_role
                 FROM track_team tt
                          LEFT JOIN track_team_member tm ON tt.id = tm.track_team_id
                          LEFT JOIN user u ON tm.user_id = u.id
                 WHERE tt.track_project_id = #{trackProjectId}
             ),
             Boards AS (
                 SELECT
                     pb.id AS board_id,
                     pb.title AS board_title,
                     pb.created_at AS board_created_at,
                     pb.thumbnail AS board_thumbnail,
                     bu.id AS board_member_id,
                     bu.name AS board_member_name
                 FROM track_project_board pb
                          LEFT JOIN track_team_member btm ON pb.track_team_id = btm.track_team_id
                          LEFT JOIN user bu ON btm.user_id = bu.id
                 WHERE pb.is_deleted = FALSE
                 AND pb.track_project_id = #{trackProjectId}
             )
        SELECT
            tp.id AS id,
            tp.title AS title,
            tp.objective AS objective,
            tp.description AS description,
            tp.created_at AS created_at,
            ntu.id AS no_team_user_id,
            ntu.name AS no_team_user_name,
            t.team_id,
            t.is_completed,
            t.member_id,
            t.member_name,
            t.member_role,
            b.board_id,
            b.board_title,
            b.board_created_at,
            b.board_thumbnail,
            b.board_member_id,
            b.board_member_name
        FROM track_project tp
                 LEFT JOIN NoTeamUsers ntu ON 1=1
                 LEFT JOIN Teams t ON 1=1
                 LEFT JOIN Boards b ON 1=1
        WHERE tp.id = #{trackProjectId}
        ORDER BY t.team_id, t.member_id, b.board_created_at DESC;

    </select>

    <!-- 관통 프로젝트 가능한 인원 조회 -->
    <select id="selectTrackProjectMembers" parameterType="Integer" resultType="ProjectUserInfo">
        SELECT DISTINCT u.id, u.name
        FROM user u
                 JOIN generation g ON u.generation_id = g.id
        WHERE g.is_active = true
          AND u.is_ssafy = true
    </select>

    <!-- 관통 프로젝트 생성 -->
    <insert id="insertTrackProject" parameterType="TrackProjectRequest"
            useGeneratedKeys="true" keyProperty="createResponse.id">
        INSERT INTO track_project (
        title,
        objective,
        description,
        user_id,
        generation_id,
        created_at,
        updated_at,
        is_deleted
        ) VALUES (
        #{trackProject.title},
        #{trackProject.objective},
        #{trackProject.description},
        #{userId},
        (SELECT id FROM generation WHERE is_active = 1),
        NOW(),
        NOW(),
        0
        )
    </insert>

    <!-- 제외 인원 추가 -->
    <insert id="insertExcludedMembers">
        INSERT INTO track_excluded_member (
        project_id,
        user_id
        ) VALUES
        <foreach collection="excludedMemberIds" item="memberId" separator=",">
            (#{trackProjectId}, #{memberId})
        </foreach>
    </insert>


    <!-- 제외 인원 삭제 -->
    <delete id="deleteSelectedExcludedMembers">
        DELETE FROM track_excluded_member
        WHERE project_id = #{trackProjectId}
        AND user_id IN
        <foreach collection="memberIds" item="memberId" open="(" separator="," close=")">
            #{memberId}
        </foreach>
    </delete>

    <!-- 제외 인원 조회 -->
    <select id="selectExcludedMembers" resultType="integer">
        SELECT user_id
        FROM track_excluded_member
        WHERE project_id = #{trackProjectId}
    </select>

    <!-- 프로젝트 수정 -->
    <update id="updateTrackProject">
        UPDATE track_project
        SET 
            title = #{trackProject.title},
            objective = #{trackProject.objective},
            description = #{trackProject.description},
            updated_at = NOW()
        WHERE id = #{trackProjectId}
        AND is_deleted = false
    </update>
    
    <!-- 프로젝트 삭제 (논리적 삭제) -->
    <update id="deleteTrackProject">
        UPDATE track_project
        SET is_deleted = true
        WHERE id = #{trackProjectId}
    </update>
    
    <!-- 존재 여부 확인 -->
    <select id="existsById" parameterType="int" resultType="boolean">
        SELECT EXISTS (
            SELECT 1 
            FROM track_project 
            WHERE id = #{trackProjectId}
            AND is_deleted = false
        )
    </select>

</mapper>